#!/bin/bash
set -eo pipefail

app_root="$( cd "$(dirname "$0")/.."; pwd )"
app_name=campfire

# Use application binstubs
export PATH="$app_root/bin:$PATH"

announce() {
  echo
  echo "--- $@"
}

if [ "$RAILS_ENV" == "production" ]
then
  echo "RAILS_ENV is production; bailing out"
  exit
fi

announce "Installing dependencies"
bundle install

announce "Installing Node.js dependencies"
if command -v npm >/dev/null 2>&1; then
  npm install
elif command -v bun >/dev/null 2>&1; then
  bun install
else
  echo "Warning: Neither npm nor bun found. You'll need to install Node.js dependencies manually."
  echo "Run 'npm install' or 'bun install' after installing a Node.js package manager."
fi

announce "Preparing database"
if [[ $* == *--reset* ]]; then
  rm -rf ./storage/{db,files}
  rails db:migrate:reset
else
  rails db:prepare
fi

announce "Cleaning up old logs, caches, and temporary files"
rails log:clear tmp:clear

announce "Restarting services"
rails restart

announce "Warming Vimeo thumbnails (no-op if no token)"
if ! rails thumbnails:warm; then
  echo "thumbnails:warm skipped or failed; continuing"
fi

if [ -d "$HOME/.puma-dev" ]; then
  announce "Configuring puma-dev"
  ln -nfs "$app_root" "$HOME/.puma-dev/$app_name"

  announce "Checking that https://$app_name.test/up is live: "
  curl -Is "https://$app_name.test/up" | head -n 1
fi
